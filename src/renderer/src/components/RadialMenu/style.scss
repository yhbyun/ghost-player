@use 'sass:list';
@use 'sass:math';

$n: 4;
$r: math.div(108deg, $n);
$button-width: 50px;
$item-width: 40px;

$d1: (
  $r * 0
);
$d2: (
  $r * 1
);
$d3: (
  $r * 2
);
$d4: (
  $r * 3
);
$d5: (
  $r * 4
);
$d6: (
  $r * 5
);

.hovering .radial-wrap .radial-btn {
  display: flex;
}

.radial-wrap {
  position: relative;
  height: 191px;

  .radial {
    position: relative;
    margin: 0 0 1px 6px;
    line-height: 0;
    padding: 0;
    list-style: none;

    &>li {
      position: absolute;
      display: block;
      height: 170px;
      // background: yellow; // For debugging
      // rotate 중심
      transform-origin: 19px bottom;

      // Transform loop
      // 일정한 각도로 원호에 배치함
      @for $i from 1 through $n {
        &:nth-of-type(#{$i}) {
          transform: rotate($r * ($i - 1));
        }
      }

      a {
        position: absolute;
        display: block;
        width: $item-width;
        height: $item-width;
        color: white;
        font-size: 20px;
        background: #444;
        border: 3px solid #fff;
        border-radius: 50%;
        box-shadow:
          rgba(0, 0, 0, 0.4) 0 0 5px 0,
          rgba(0, 0, 0, 0.2) 0 0 0 1px,
          inset rgba(0, 0, 0, 0.5) 0 0 2px 0;

        &:active {
          background: #000;
          border-color: #555;

          span {
            opacity: 0.3;
          }
        }

        span {
          display: flex;
          justify-content: center;
          align-items: center;
          width: 100%;
          height: 100%;
        }
      }
    }
  }

  // Triggers
  .radial-init li {
    display: none;
  }

  // 6개 중 안 사용하는 나머지는 hidden
  .radial li {
    @for $i from $n + 1 through 6 {
      &:nth-of-type(#{$i}) {
        display: none;
      }
    }
  }

  // Normal
  .radial li a {
    top: 150px;
    opacity: 0;
    animation: contract 0.35s ease-out 1 backwards;
  }

  // Active
  // radial 버튼 클릭시 메뉴 아이템의 위치
  .radial.expand li {
    @for $i from 1 through $n {
      &:nth-of-type(#{$i}) a {
        top: 10px;
        opacity: 1;
        animation: expand 0.6s ease 1 backwards;
      }
    }
  }

  // Clicked
  .radial.fade li a.clicked {
    top: 10px;
    animation: clicked 0.5s ease-out 1 forwards;
  }

  .radial.fade li a:not(.clicked) {
    top: 10px;
    animation: fade 0.5s ease-out 1 forwards;

    span {
      opacity: 0.1;
      transition: opacity 0.5s ease;
    }
  }

  // Animation loop
  @for $i from 1 through $n {
    .radial li:nth-of-type(#{$i}) a {
      animation-delay: (0.2s - 0.04s * ($i - 1));
    }

    .radial li:nth-of-type(#{$i}) a:not(.clicked) span {
      animation: spin#{$i}-contract 0.9s ease-out 1 backwards;
    }

    .radial.expand li:nth-of-type(#{$i}) a {
      animation-delay: (0.04s * ($i - 1));
    }

    .radial.expand li:nth-of-type(#{$i}) a span {
      transform: rotate(-($r * ($i - 1)));
      animation: spin#{$i}-expand 0.6s ease-out 1 backwards;
    }

    .radial.fade li:nth-of-type(#{$i}) a.clicked span {
      transform: rotate(-($r * ($i - 1)));
    }

    &:nth-of-type(#{$i}) {
      transform: rotate($r * ($i - 1));
    }
  }

  .radial-btn {
    display: none;
    position: absolute;
    bottom: 0;
    left: 0;
    width: $button-width;
    height: $button-width;
    overflow: hidden;
    border-radius: 50%;
    background-color: rgba(0, 0, 0, 0.5);
    outline: none;
    opacity: 0.45;
    z-index: 11111;
    cursor: pointer;
    justify-content: center;
    align-items: center;

    &:hover {
      opacity: 1;
      background-color: rgba(0, 0, 0, 0.7);
    }

    >div {
      text-align: center;
      width: $button-width - 14;
      height: $button-width - 14;
      font-size: 22px;
      font-weight: bold;
      color: white;
      transition: transform 0.4s ease;
    }

    &.btn-rotate div {
      transform: rotate(135deg);
    }
  }

  @keyframes expand {
    0% {
      opacity: 0;
      top: 150px;
    }

    10% {
      opacity: 1;
    }

    50% {
      top: -10px;
    }

    70% {
      top: 15px;
    }

    100% {
      top: 10px;
    }
  }

  @keyframes contract {
    0% {
      opacity: 1;
      top: 10px;
    }

    40% {
      opacity: 1;
      top: -25px;
    }

    100% {
      opacity: 0;
      top: 150px;
    }
  }

  @keyframes clicked {
    0% {
      transform: scale(1);
      opacity: 1;
      top: 10px;
    }

    90% {
      top: 10px;
    }

    99% {
      transform: scale(6);
      opacity: 0;
      top: 150px;
    }

    100% {
      transform: scale(0);
    }
  }

  @keyframes fade {
    0% {
      transform: scale(1);
      opacity: 1;
      top: 10px;
    }

    90% {
      opacity: 0;
      top: 10px;
    }

    99% {
      transform: scale(0);
      top: 150px;
    }

    100% {
      transform: scale(0);
    }
  }

  $list: #{$d1} #{$d2} #{$d3} #{$d4} #{$d5} #{$d6};

  @mixin get-from-list1($index) {
    transform: rotate((0 - list.nth($list, $index)));
  }

  @mixin get-from-list2($index) {
    transform: rotate((-360deg - list.nth($list, $index)));
  }

  // Item animation loop
  @for $i from 1 through $n {
    @keyframes spin#{$i}-expand {
      0% {
        @include get-from-list1($i);
      }

      60% {
        @include get-from-list2($i);
      }

      100% {
        @include get-from-list2($i);
      }
    }

    @keyframes spin#{$i}-contract {
      0% {
        @include get-from-list1($i);
      }

      50% {
        transform: rotate(360deg);
      }

      100% {
        transform: rotate(360deg);
      }
    }
  }
}
